

upstream example_rp_server{
      server unix:/data/sockets/server.sock;
}

server {
  
  set $accept_encoding "";
  if ($http_accept_encoding ~* gzip) {
      set $accept_encoding "gzip";
  }
  server_name server.name;
  listen 80;

  location / {
    # Adds a header to show cache status
    add_header X-Cache-Status $upstream_cache_status;
    proxy_read_timeout 25s;
    proxy_connect_timeout 25s;
    proxy_cache static;
    proxy_cache_key "$request_uri $accept_encoding";
    proxy_cache_valid 200 0m;
    proxy_cache_use_stale timeout http_504 updating;
    proxy_set_header Host localhost;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    #proxy_buffering off;
    #proxy_set_header X-Real-IP $remote_addr;
    #keepalive_requests 0;

    # try to send the request through the static backend defined above.
    # if the static backend finds the file, it will be cached.
    # otherwise, it will 404.
    proxy_pass http://example_rp_server;

    }
}

